// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tonkean/pulumi-openai/sdk/go/openai/internal"
)

// Fine Tuning Job resource
type FinetuningJob struct {
	pulumi.CustomResourceState

	// Created Time
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Fine Tuned Model
	FineTunedModel pulumi.StringOutput `pulumi:"fineTunedModel"`
	// Finished Time
	FinishedAt pulumi.IntOutput `pulumi:"finishedAt"`
	// Hyperparams
	Hyperparams FinetuningJobHyperparamsOutput `pulumi:"hyperparams"`
	// Model Identifier
	Model pulumi.StringPtrOutput `pulumi:"model"`
	// Object Type
	Object pulumi.StringOutput `pulumi:"object"`
	// Organization Id
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Result Files
	ResultFiles pulumi.StringArrayOutput `pulumi:"resultFiles"`
	// Status
	Status pulumi.StringOutput `pulumi:"status"`
	// Suffix
	Suffix pulumi.StringOutput `pulumi:"suffix"`
	// Trained Tokens
	TrainedTokens pulumi.IntOutput `pulumi:"trainedTokens"`
	// Training File Identifier
	TrainingFile pulumi.StringPtrOutput `pulumi:"trainingFile"`
	// Validation File Identifier
	ValidationFile pulumi.StringPtrOutput `pulumi:"validationFile"`
	// Wait for Fine Tuning Job completion
	Wait pulumi.BoolPtrOutput `pulumi:"wait"`
}

// NewFinetuningJob registers a new resource with the given unique name, arguments, and options.
func NewFinetuningJob(ctx *pulumi.Context,
	name string, args *FinetuningJobArgs, opts ...pulumi.ResourceOption) (*FinetuningJob, error) {
	if args == nil {
		args = &FinetuningJobArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FinetuningJob
	err := ctx.RegisterResource("openai:index/finetuningJob:FinetuningJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFinetuningJob gets an existing FinetuningJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFinetuningJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FinetuningJobState, opts ...pulumi.ResourceOption) (*FinetuningJob, error) {
	var resource FinetuningJob
	err := ctx.ReadResource("openai:index/finetuningJob:FinetuningJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FinetuningJob resources.
type finetuningJobState struct {
	// Created Time
	CreatedAt *int `pulumi:"createdAt"`
	// Fine Tuned Model
	FineTunedModel *string `pulumi:"fineTunedModel"`
	// Finished Time
	FinishedAt *int `pulumi:"finishedAt"`
	// Hyperparams
	Hyperparams *FinetuningJobHyperparams `pulumi:"hyperparams"`
	// Model Identifier
	Model *string `pulumi:"model"`
	// Object Type
	Object *string `pulumi:"object"`
	// Organization Id
	OrganizationId *string `pulumi:"organizationId"`
	// Result Files
	ResultFiles []string `pulumi:"resultFiles"`
	// Status
	Status *string `pulumi:"status"`
	// Suffix
	Suffix *string `pulumi:"suffix"`
	// Trained Tokens
	TrainedTokens *int `pulumi:"trainedTokens"`
	// Training File Identifier
	TrainingFile *string `pulumi:"trainingFile"`
	// Validation File Identifier
	ValidationFile *string `pulumi:"validationFile"`
	// Wait for Fine Tuning Job completion
	Wait *bool `pulumi:"wait"`
}

type FinetuningJobState struct {
	// Created Time
	CreatedAt pulumi.IntPtrInput
	// Fine Tuned Model
	FineTunedModel pulumi.StringPtrInput
	// Finished Time
	FinishedAt pulumi.IntPtrInput
	// Hyperparams
	Hyperparams FinetuningJobHyperparamsPtrInput
	// Model Identifier
	Model pulumi.StringPtrInput
	// Object Type
	Object pulumi.StringPtrInput
	// Organization Id
	OrganizationId pulumi.StringPtrInput
	// Result Files
	ResultFiles pulumi.StringArrayInput
	// Status
	Status pulumi.StringPtrInput
	// Suffix
	Suffix pulumi.StringPtrInput
	// Trained Tokens
	TrainedTokens pulumi.IntPtrInput
	// Training File Identifier
	TrainingFile pulumi.StringPtrInput
	// Validation File Identifier
	ValidationFile pulumi.StringPtrInput
	// Wait for Fine Tuning Job completion
	Wait pulumi.BoolPtrInput
}

func (FinetuningJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*finetuningJobState)(nil)).Elem()
}

type finetuningJobArgs struct {
	// Model Identifier
	Model *string `pulumi:"model"`
	// Training File Identifier
	TrainingFile *string `pulumi:"trainingFile"`
	// Validation File Identifier
	ValidationFile *string `pulumi:"validationFile"`
	// Wait for Fine Tuning Job completion
	Wait *bool `pulumi:"wait"`
}

// The set of arguments for constructing a FinetuningJob resource.
type FinetuningJobArgs struct {
	// Model Identifier
	Model pulumi.StringPtrInput
	// Training File Identifier
	TrainingFile pulumi.StringPtrInput
	// Validation File Identifier
	ValidationFile pulumi.StringPtrInput
	// Wait for Fine Tuning Job completion
	Wait pulumi.BoolPtrInput
}

func (FinetuningJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*finetuningJobArgs)(nil)).Elem()
}

type FinetuningJobInput interface {
	pulumi.Input

	ToFinetuningJobOutput() FinetuningJobOutput
	ToFinetuningJobOutputWithContext(ctx context.Context) FinetuningJobOutput
}

func (*FinetuningJob) ElementType() reflect.Type {
	return reflect.TypeOf((**FinetuningJob)(nil)).Elem()
}

func (i *FinetuningJob) ToFinetuningJobOutput() FinetuningJobOutput {
	return i.ToFinetuningJobOutputWithContext(context.Background())
}

func (i *FinetuningJob) ToFinetuningJobOutputWithContext(ctx context.Context) FinetuningJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinetuningJobOutput)
}

// FinetuningJobArrayInput is an input type that accepts FinetuningJobArray and FinetuningJobArrayOutput values.
// You can construct a concrete instance of `FinetuningJobArrayInput` via:
//
//	FinetuningJobArray{ FinetuningJobArgs{...} }
type FinetuningJobArrayInput interface {
	pulumi.Input

	ToFinetuningJobArrayOutput() FinetuningJobArrayOutput
	ToFinetuningJobArrayOutputWithContext(context.Context) FinetuningJobArrayOutput
}

type FinetuningJobArray []FinetuningJobInput

func (FinetuningJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FinetuningJob)(nil)).Elem()
}

func (i FinetuningJobArray) ToFinetuningJobArrayOutput() FinetuningJobArrayOutput {
	return i.ToFinetuningJobArrayOutputWithContext(context.Background())
}

func (i FinetuningJobArray) ToFinetuningJobArrayOutputWithContext(ctx context.Context) FinetuningJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinetuningJobArrayOutput)
}

// FinetuningJobMapInput is an input type that accepts FinetuningJobMap and FinetuningJobMapOutput values.
// You can construct a concrete instance of `FinetuningJobMapInput` via:
//
//	FinetuningJobMap{ "key": FinetuningJobArgs{...} }
type FinetuningJobMapInput interface {
	pulumi.Input

	ToFinetuningJobMapOutput() FinetuningJobMapOutput
	ToFinetuningJobMapOutputWithContext(context.Context) FinetuningJobMapOutput
}

type FinetuningJobMap map[string]FinetuningJobInput

func (FinetuningJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FinetuningJob)(nil)).Elem()
}

func (i FinetuningJobMap) ToFinetuningJobMapOutput() FinetuningJobMapOutput {
	return i.ToFinetuningJobMapOutputWithContext(context.Background())
}

func (i FinetuningJobMap) ToFinetuningJobMapOutputWithContext(ctx context.Context) FinetuningJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinetuningJobMapOutput)
}

type FinetuningJobOutput struct{ *pulumi.OutputState }

func (FinetuningJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FinetuningJob)(nil)).Elem()
}

func (o FinetuningJobOutput) ToFinetuningJobOutput() FinetuningJobOutput {
	return o
}

func (o FinetuningJobOutput) ToFinetuningJobOutputWithContext(ctx context.Context) FinetuningJobOutput {
	return o
}

// Created Time
func (o FinetuningJobOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Fine Tuned Model
func (o FinetuningJobOutput) FineTunedModel() pulumi.StringOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringOutput { return v.FineTunedModel }).(pulumi.StringOutput)
}

// Finished Time
func (o FinetuningJobOutput) FinishedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.IntOutput { return v.FinishedAt }).(pulumi.IntOutput)
}

// Hyperparams
func (o FinetuningJobOutput) Hyperparams() FinetuningJobHyperparamsOutput {
	return o.ApplyT(func(v *FinetuningJob) FinetuningJobHyperparamsOutput { return v.Hyperparams }).(FinetuningJobHyperparamsOutput)
}

// Model Identifier
func (o FinetuningJobOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringPtrOutput { return v.Model }).(pulumi.StringPtrOutput)
}

// Object Type
func (o FinetuningJobOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringOutput { return v.Object }).(pulumi.StringOutput)
}

// Organization Id
func (o FinetuningJobOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Result Files
func (o FinetuningJobOutput) ResultFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringArrayOutput { return v.ResultFiles }).(pulumi.StringArrayOutput)
}

// Status
func (o FinetuningJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Suffix
func (o FinetuningJobOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringOutput { return v.Suffix }).(pulumi.StringOutput)
}

// Trained Tokens
func (o FinetuningJobOutput) TrainedTokens() pulumi.IntOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.IntOutput { return v.TrainedTokens }).(pulumi.IntOutput)
}

// Training File Identifier
func (o FinetuningJobOutput) TrainingFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringPtrOutput { return v.TrainingFile }).(pulumi.StringPtrOutput)
}

// Validation File Identifier
func (o FinetuningJobOutput) ValidationFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.StringPtrOutput { return v.ValidationFile }).(pulumi.StringPtrOutput)
}

// Wait for Fine Tuning Job completion
func (o FinetuningJobOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FinetuningJob) pulumi.BoolPtrOutput { return v.Wait }).(pulumi.BoolPtrOutput)
}

type FinetuningJobArrayOutput struct{ *pulumi.OutputState }

func (FinetuningJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FinetuningJob)(nil)).Elem()
}

func (o FinetuningJobArrayOutput) ToFinetuningJobArrayOutput() FinetuningJobArrayOutput {
	return o
}

func (o FinetuningJobArrayOutput) ToFinetuningJobArrayOutputWithContext(ctx context.Context) FinetuningJobArrayOutput {
	return o
}

func (o FinetuningJobArrayOutput) Index(i pulumi.IntInput) FinetuningJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FinetuningJob {
		return vs[0].([]*FinetuningJob)[vs[1].(int)]
	}).(FinetuningJobOutput)
}

type FinetuningJobMapOutput struct{ *pulumi.OutputState }

func (FinetuningJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FinetuningJob)(nil)).Elem()
}

func (o FinetuningJobMapOutput) ToFinetuningJobMapOutput() FinetuningJobMapOutput {
	return o
}

func (o FinetuningJobMapOutput) ToFinetuningJobMapOutputWithContext(ctx context.Context) FinetuningJobMapOutput {
	return o
}

func (o FinetuningJobMapOutput) MapIndex(k pulumi.StringInput) FinetuningJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FinetuningJob {
		return vs[0].(map[string]*FinetuningJob)[vs[1].(string)]
	}).(FinetuningJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FinetuningJobInput)(nil)).Elem(), &FinetuningJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*FinetuningJobArrayInput)(nil)).Elem(), FinetuningJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FinetuningJobMapInput)(nil)).Elem(), FinetuningJobMap{})
	pulumi.RegisterOutputType(FinetuningJobOutput{})
	pulumi.RegisterOutputType(FinetuningJobArrayOutput{})
	pulumi.RegisterOutputType(FinetuningJobMapOutput{})
}
